{"version":3,"sources":["update-model.js","unique-window-identifier.js","angular-sync-local-storage.js"],"names":[],"mappings":"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","file":"angular-sync-local-storage.js","sourcesContent":["\"use strict\";\n\nif(!window.taylorcode) window.taylorcode = {}\n\ntaylorcode.updateModel = updateModel;\n\nfunction updateModel(oldObj, newObj) {\n\n   if (oldObj.constructor !== newObj.constructor) {\n      throw new Error(\"updateModel: both arguments passed must be of the same type.\");\n   }\n   if (!oldObj instanceof Object) {\n      throw new Error(\"updateModel: arguments passed cannot be primitive.\");\n   }\n\n   function compareElementsAtKey(key) {\n      // property simply doesn't exist in the new object\n      if (!oldObj[key]) {\n         oldObj[key] = newObj[key];\n      } else\n         // they are both either arrays or hashes, and are not of primitive types\n         if (oldObj[key].constructor === newObj[key].constructor && oldObj[key] instanceof Object) {\n            updateModel(oldObj[key], newObj[key]);\n         } else if (oldObj[key] !== newObj[key]) {\n            // all this compares is if primitives are equal, don't reassign\n            oldObj[key] = newObj[key];\n         }\n   }\n\n   if (oldObj instanceof Array) {\n      // we can assume at this point that they are both arrays\n      if (oldObj.length > newObj.length) {\n         oldObj.length = newObj.length // actually mutate the length of the old object -- remove the items that are not in it\n         ;\n      }\n      // the lengths are the same - one to one with new and old object\n      for (var i = 0; i < newObj.length; i++) {\n         compareElementsAtKey(i);\n      }\n   } else {\n      // we can assume that they are both objects\n      // if the old object has any properties that are not in the new object, remove them\n      for (var oldProp in oldObj) {\n         if (!newObj.hasOwnProperty(oldProp)) {\n            delete oldObj[oldProp];\n         }\n      }\n      // now the properties are the same between new and old object\n      for (var prop in newObj) {\n         compareElementsAtKey(prop);\n      }\n   }\n}\n//# sourceMappingURL=update-model.js.map","\"use strict\";\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var key in props) { var prop = props[key]; prop.configurable = true; if (prop.value) prop.writable = true; } Object.defineProperties(target, props); } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } };\n\nvar UniqueWindowIdentifier = (function () {\n  function UniqueWindowIdentifier($window) {\n    _classCallCheck(this, UniqueWindowIdentifier);\n\n    this.$window = $window;\n    this.currentWindow = this.$window.self;\n    this.nameKey = \"__uniqueWindowIdentifier\";\n  }\n\n  _createClass(UniqueWindowIdentifier, {\n    _generateUniqueId: {\n      value: function _generateUniqueId() {\n        return Math.random().toString(36).slice(2);\n      }\n    },\n    _setIdentifier: {\n      value: function _setIdentifier(nameObj) {\n        var windowNameObj = nameObj || {};\n        windowNameObj[this.nameKey] = this._generateUniqueId();\n        this.currentWindow.name = JSON.stringify(windowNameObj);\n      }\n    },\n    ensure: {\n      value: function ensure() {\n        var windowNameObj;\n        // if windowProps.name is set and it's not a stringified object, convert it to it\n        if (this.currentWindow.name) {\n          try {\n            windowNameObj = JSON.parse(this.currentWindow.name);\n          } catch (e) {\n            // the name is not a stringified object\n            console.warn(\"UniqueWindowIdentifier: the windows name is already set, overriding with an stringified object\");\n            this._setIdentifier();\n            return;\n          }\n          // what's saved is a stringifed object already\n          if (!windowNameObj[this.nameKey]) {\n            this._setIdentifier(windowNameObj);\n          }\n        } else {\n          this._setIdentifier();\n        }\n      }\n    },\n    reset: {\n      value: function reset() {\n        this._setIdentifier();\n      }\n    },\n    get: {\n      value: function get() {\n        // return the identifier or undefined\n        var identifier;\n        try {\n          identifier = JSON.parse(this.currentWindow.name)[this.nameKey];\n        } catch (e) {\n          return;\n        }\n        return identifier;\n      }\n    }\n  });\n\n  return UniqueWindowIdentifier;\n})();\n\nangular.module(\"angularUniqueWindow\", []).service(\"uniqueWindowIdentifier\", UniqueWindowIdentifier);\n//# sourceMappingURL=unique-window-identifier.js.map","'use strict';\n\n/**\n  * @ngdoc overview\n  * @name angularSyncLocalStorage\n  * @description\n  * Allows you to automatically synchronize an object with localStorage across browser windows using angular's digest cycle.\n */\n\nclass AngularSyncLocalStorageProvider {\n  constructor() {\n    this.debounceSyncDelay = 300\n  }\n  $get($rootScope, $window, $timeout, uniqueWindowIdentifier) {\n    return new AngularSyncLocalStorage($rootScope, $window, $timeout, uniqueWindowIdentifier, this) // pass in the provider instance\n  }\n}\n\nfunction AngularSyncLocalStorageProviderFactory () {\n  return new AngularSyncLocalStorageProvider\n}\n\nclass AngularSyncLocalStorage {\n\n  constructor($rootScope, $window, $timeout, uniqueWindowIdentifier, providerInstance) {\n    this.$rootScope = $rootScope\n    this.$window = $window\n    this.$timeout = $timeout\n    this.localStorage = $window.localStorage\n    this.supportsLocalStorage = supportsLocalStorage\n    this.debounce = debounce\n    this.sync = sync\n    this.providerInstance = providerInstance\n    this.syncLocal = angular.noop\n    this.uniqueWindowIdentifier = uniqueWindowIdentifier\n  }\n\n  _queryUpdateStorage() {\n    if(this.syncLocal()) {\n      // NOTE timeout is needed because this has the potential to be broadcasted before the ready \n      // event is fired in jquery where this is being listened for\n      // on updated occurs when localStorage is updated outside of the application\n      // and you may have services that need to query the data (such as session information)\n      this.$timeout(() => {\n        this.$rootScope.$broadcast('sls:updated')\n      })\n      this.$rootScope.$digest()\n    }\n  }\n\n  _updateLocalStorage(key, value) {\n    this.localStorage[key] = angular.toJson(value)\n  }\n\n  synchronize(localObject, persistKey, ops) {\n\n    let localObjStringType = Object.prototype.toString.call(localObject)\n\n    if(localObjStringType !== '[object Object]' && localObjStringType !== '[object Array]') {\n      throw new Error('AngularSyncLocalStorage: object to synchronize with must be an hash or an array.')\n    }\n\n    var options = {\n      uniquePerWindow: false,\n      initialSync: true\n    }, synchronizeLocalStorage\n\n    // merge options into default options\n    angular.extend(options, ops)\n\n    if (!this.supportsLocalStorage()) {\n      // silently die if there is no localStorage support\n      return\n    }\n\n    if(options.uniquePerWindow) {\n      // create or just make sure the window has it's unique identifier\n      this.uniqueWindowIdentifier.ensure()\n      // modify the key so that it uses a unique store for this window\n      persistKey += '_' + this.uniqueWindowIdentifier.get()\n    }\n\n    this.syncLocal = this.sync(this.localStorage, persistKey, localObject)\n\n    if (options.initialSync) {\n      // if we want to initially sync, it will override what's currently in the local object with what is in localStorage\n      this.syncLocal()\n    }\n    // set up to update localStorage only every debounce time\n    // only affects performance of the other windows receiving the update\n    synchronizeLocalStorage = this.debounce((ls) => {\n      this._updateLocalStorage(persistKey, ls)\n    }, this.providerInstance.debounceSyncDelay, true) // immediate so that it initially syncs\n\n    // deep watch localObject for changes, update localStorage when whey occur\n    this.$rootScope.$watch(() => {\n      return localObject\n    }, synchronizeLocalStorage, !options.initialSync) // initially update if we haven't already synchronized ls --> obj\n\n    // listen for storage changes, notify\n    this.$window.addEventListener('storage', this._queryUpdateStorage.bind(this))\n\n  }\n\n}\n\nangular.module('angularSyncLocalStorage', ['angularUniqueWindow']).provider('synchronizedLocalStorage', AngularSyncLocalStorageProviderFactory)\n\n\n// helper functions - move to better place\nfunction supportsLocalStorage() {\n  var testKey = 'test',\n      storage = window.localStorage\n  try {\n    storage.setItem(testKey, '1')\n    storage.removeItem(testKey)\n    return true\n  } catch (error) {\n    return false\n  }\n}\n// remove dependency of underscore\nfunction debounce(func, wait, immediate) {\n  var timeout\n  return function() {\n    var context = this, args = arguments\n    var later = function() {\n      timeout = null\n      if (!immediate) func.apply(context, args)\n    }\n    var callNow = immediate && !timeout\n    clearTimeout(timeout)\n    timeout = setTimeout(later, wait)\n    if (callNow) func.apply(context, args)\n  }\n}\n\nfunction sync(storageService, key, localObject) {\n  return function () {\n    var fromStorageContainer\n    // if there's no container (such as localStorage, then create it)\n    if(!storageService[key]) {\n      return false\n    } else {\n      fromStorageContainer = angular.fromJson(storageService[key])\n      // if the storage containers stuff isn't the same as the local object\n      if (!angular.equals(localObject, fromStorageContainer)) {\n        // update the local object with the storage containers stuff\n        taylorcode.updateModel(localObject, fromStorageContainer)\n        return true\n      }\n      return false\n    }\n  }\n}"],"sourceRoot":"/source/"}